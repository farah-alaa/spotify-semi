# -*- coding: utf-8 -*-
"""spotify semi.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y8SndQ2NI9TxrfcB17Pngo-ikxuT49I1
"""

!pip install kaggle

!mkdir ~/.kaggle
!cp kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json
!kaggle datasets download -d himanshuwagh/spotify-million

!unzip spotify-million.zip

import pandas as pd
import json
data = json.load(open('data/mpd.slice.0-999.json'))
print(data)

data['info']

df = pd.DataFrame(data['playlists'])
df.head()

import pandas as pd
import json

df = pd.DataFrame()
for i in range(10):
  data = json.load(open(f'data/mpd.slice.{i*1000}-{i*1000+999}.json'))
  playlists = pd.DataFrame(data['playlists'])
  df = pd.concat([df, pd.DataFrame(data['playlists'])])

df.head()

df.info()

# Convert 'modified_at' to a datetime object and extract the year
df['year'] = pd.to_datetime(df['modified_at']).dt.year

# Display the first few rows and information about the DataFrame
df.head()
df.info()
print(df.head())

import pandas as pd
import json

data = pd.DataFrame()

for i in range(10):
    with open(f"data/mpd.slice.{i*1000}-{i*1000+999}.json", 'r') as file:
        data_json = json.load(file)
        playlists = pd.DataFrame(data_json['playlists'])
        data = pd.concat([data, playlists], ignore_index=True)

tracks_expanded = data.explode('tracks').reset_index(drop=True)
tracks_expanded = pd.concat([tracks_expanded.drop(['tracks'], axis=1), tracks_expanded['tracks'].apply(pd.Series)], axis=1)
tracks_expanded.head()

import missingno as msno
msno.matrix(df)

df = df.drop('description', axis=1)
df.head()

import missingno as msno
msno.matrix(df)

import matplotlib.pyplot as plt
import seaborn as sns
# line plot
plt.figure(figsize=(12,6))
sns.lineplot(data=df, x='name', y='num_tracks')

df['modified_at'].hist(bins = 100)
plt.show()

df['num_albums'].hist(color = 'red',figsize=(5,5))
plt.xlabel('num_albums')
plt.ylabel('num_tracks')
plt.title('num_albums vs num_tracks')
plt.show()

# Select only numeric columns
numeric_df = df.select_dtypes(include=['float64', 'int64'])
#plot heatmap of correlation matrix
plt.figure(figsize=(10,10))
sns.heatmap(numeric_df.corr(),annot=True)
plt.show()

print(df.columns)

# Inspect a few rows of the 'tracks' column
print(df['tracks'].head())

import pandas as pd
import json
import os
track_rows = []

for i in range(50):
    file_path = f"data/mpd.slice.{i*1000}-{i*1000+999}.json"

    if not os.path.exists(file_path):
        print(f"File {file_path} does not exist. Skipping.")
        continue

    try:
        with open(file_path, 'r') as file:
            data = json.load(file)

        playlists = data.get("playlists", [])
        for playlist in playlists:
            for track in playlist.get("tracks", []):
                track_row = {
                    "playlist_name": playlist.get("name", ""),
                    "collaborative": playlist.get("collaborative", False),
                    "pid": playlist.get("pid", ""),
                    "modified_at": playlist.get("modified_at", ""),
                    "num_tracks": playlist.get("num_tracks", 0),
                    "num_albums": playlist.get("num_albums", 0),
                    "num_followers": playlist.get("num_followers", 0),
                    "num_edits": playlist.get("num_edits", 0),
                    "track_pos": track.get("pos", 0),
                    "artist_name": track.get("artist_name", ""),
                    "track_uri": track.get("track_uri", ""),
                    "artist_uri": track.get("artist_uri", ""),
                    "track_name": track.get("track_name", ""),
                    "album_uri": track.get("album_uri", ""),
                    "duration_ms": track.get("duration_ms", 0),
                    "album_name": track.get("album_name", ""),
                    "num_artists": playlist.get("num_artists", 0),
                    "description":track.get("description","")

                }
                track_rows.append(track_row)

    except (json.JSONDecodeError, IOError) as e:
        print(f"Error processing file {file_path}: {e}")
df = pd.DataFrame(track_rows)
csv_file = 'Spotify_Million.csv'
df.to_csv(csv_file, index=False)

print(f"CSV file has been created successfully: {csv_file}")

# line plot
plt.figure(figsize=(12,6))
plt.plot(df['num_followers'],df['21K - Local Price/Buy'])
plt.title('21K - Local Price/Buy')
plt.xlabel('num_followers')
plt.ylabel('artist_name')
plt.xticks(rotation=45)
plt.show()